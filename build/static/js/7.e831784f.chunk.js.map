{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","_comics$textObjects$","title","price","prices","pageCount","language","textObjects","AppBanner","_jsxs","className","children","avengers","avengersLogo","setContent","Component","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","_useState3","_useState4","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","arr","item","i","Link","to","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","content"],"mappings":"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","file":"static/js/7.e831784f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\" }} src={img} alt={\"Error\"} />\n    )\n}\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const { request, clearError, process, setProcess } = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=1fe3cae44952e1d3ef0f735e1c2d3d9f';\n    const _baseOffSet = 210;\n\n    const getAllCharacters = async (offset = _baseOffSet) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getCharacterByName = async (name) => {\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const _transformCharacter = (char) => {\n\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformComics = (comics) => {\n\n        return {\n            id: comics.id,\n            title: comics.title,\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'NOT AVAILABLE',\n            description: comics.description || \"There is no description\",\n            pageCount: comics.pageCount\n                ? `${comics.pageCount} p.`\n                : \"No information about the number of pages\",\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects[0]?.language || \"en-us\",\n        }\n    }\n\n    return {\n        getAllCharacters,\n        getCharacter,\n        getCharacterByName,\n        clearError,\n        process,\n        setProcess,\n        getAllComics,\n        getComic\n    }\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\n\n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, { method, body, headers });\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n\n        } catch (e) {\n            setProcess('loading');\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n\n    return { request, clearError, process, setProcess }\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner />;\n            break;\n        case 'loading':\n            return newItemLoading ? <Component /> : <Spinner />;\n            break;\n        case 'confirmed':\n            return <Component />;\n            break;\n        case 'error':\n            return <ErrorMessage />;\n            break;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { getAllComics, process, setProcess } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li\n                    className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`} >\n                        <img src={item.thumbnail} alt={item.title} className='comics__item-img' />\n                        <div className='comics__item-name' >{item.title}</div>\n                        <div className='comics__item-price' >{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\n\nimport AppBanner from '../appBanner/AppBanner';\nimport ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with list of our comics\"\n                />\n                <title>Comics page</title>\n            </Helmet>\n            <AppBanner />\n            <ComicsList />\n        </>\n    )\n}\n\nexport default ComicsPage;"],"sourceRoot":""}